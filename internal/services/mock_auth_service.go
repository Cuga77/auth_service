// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/auth-service/internal/services (interfaces: AuthServiceInterface)

// Package services is a generated GoMock package.
package services

import (
	context "context"
	net "net"
	reflect "reflect"

	models "github.com/auth-service/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthServiceInterface is a mock of AuthServiceInterface interface.
type MockAuthServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAuthServiceInterfaceMockRecorder
}

// MockAuthServiceInterfaceMockRecorder is the mock recorder for MockAuthServiceInterface.
type MockAuthServiceInterfaceMockRecorder struct {
	mock *MockAuthServiceInterface
}

// NewMockAuthServiceInterface creates a new mock instance.
func NewMockAuthServiceInterface(ctrl *gomock.Controller) *MockAuthServiceInterface {
	mock := &MockAuthServiceInterface{ctrl: ctrl}
	mock.recorder = &MockAuthServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthServiceInterface) EXPECT() *MockAuthServiceInterfaceMockRecorder {
	return m.recorder
}

// GenerateTokens mocks base method.
func (m *MockAuthServiceInterface) GenerateTokens(arg0 context.Context, arg1 string, arg2 net.IP) (*models.TokenPair, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateTokens", arg0, arg1, arg2)
	ret0, _ := ret[0].(*models.TokenPair)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateTokens indicates an expected call of GenerateTokens.
func (mr *MockAuthServiceInterfaceMockRecorder) GenerateTokens(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateTokens", reflect.TypeOf((*MockAuthServiceInterface)(nil).GenerateTokens), arg0, arg1, arg2)
}

// RefreshTokens mocks base method.
func (m *MockAuthServiceInterface) RefreshTokens(arg0 context.Context, arg1, arg2 string, arg3 net.IP) (*models.TokenPair, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RefreshTokens", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*models.TokenPair)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RefreshTokens indicates an expected call of RefreshTokens.
func (mr *MockAuthServiceInterfaceMockRecorder) RefreshTokens(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshTokens", reflect.TypeOf((*MockAuthServiceInterface)(nil).RefreshTokens), arg0, arg1, arg2, arg3)
}

// RevokeAllTokens mocks base method.
func (m *MockAuthServiceInterface) RevokeAllTokens(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RevokeAllTokens", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RevokeAllTokens indicates an expected call of RevokeAllTokens.
func (mr *MockAuthServiceInterfaceMockRecorder) RevokeAllTokens(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RevokeAllTokens", reflect.TypeOf((*MockAuthServiceInterface)(nil).RevokeAllTokens), arg0, arg1)
}
